#############
#
# Notes
#
#############

[[plugins]]
repo = 'glidenote/memolist.vim'
on_cmd = ['MemoList', 'MemoGrep', 'MemoNew']
hook_source = '''
    let g:memolist_memo_suffix = "md.txt"
    let g:memolist_prompt_tags = 1
    let g:memolist_qfixgrep = 1
    let g:memolist_vimfiler = 1
    let g:memolist_vimfiler_option ="" "No split
    au BufNewFile,BufRead *.{md.txt,md,mdwn,mkd,mkdn,mark*} set filetype=markdown
'''

[[plugins]]
repo =  'basyura/rmine.vim'

[[plugins]]
repo =  'vimwiki/vimwiki'

###################
#
# Utils
#
##################

[[plugins]]
repo =  'Shougo/unite.vim'
hook_source = '''
    let g:unite_winwidth = 40
    let g:unite_split_rule = "rightbelow"
'''
#################
#
# Filer
#
#################

[[plugins]]
repo = 'Shougo/vimfiler.git'
on_cmd = [ 'VimFilerTab' , 'VimFiler' , 'VimFilerExplorer' ]
hook_source = 'g:vimfiler_as_default_explorer = 1'

[[plugins]]
repo = 'kien/ctrlp.vim'
on_cmd = ['CtrlPMixed', 'CtrlPClearAllCaches', 'CtrlPCurWD', 'CtrlP', 'CtrlPRTS', 'CtrlPBuffer', 'CtrlPMRUFiles', 'CtrlPBookmarkDirAdd', 'CtrlPDir', 'CtrlPRoot', 'CtrlPChange', 'ClearCtrlPCache', 'CtrlPLine', 'ClearAllCtrlPCaches', 'CtrlPBufTagAll', 'CtrlPClearCache', 'CtrlPQuickfix', 'CtrlPBufTag', 'CtrlPTag', 'CtrlPCurFile', 'CtrlPLastMode', 'CtrlPUndo', 'CtrlPChangeAll', 'CtrlPBookmarkDir']

[[plugins]]
repo = 'mbbill/VimExplorer'
on_cmd = ['VE', 'VEC']

#############
#
# Styles
#
############
[[plugins]]
repo =  'plasticboy/vim-markdown'
on_ft = 'markdown'

[[plugins]]
repo =  'pangloss/vim-javascript'
on_ft = 'javascript'

[[plugins]]
repo =  'OrangeT/vim-csharp'
on_ft = 'csharp'

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

#############
#
# Env
#
############

[[plugins]]
repo =  'osyo-manga/vim-watchdogs'
depends = [
  'vim-hier',
  'shabadou.vim',
  'vim-quickrun',
]
# í«ãLéQè∆ 2016/05/09
on_event = ['FocusLost', 'CursorHold']
hook_add = '''
  let g:quickrun_config = get(g:, 'quickrun_config', {})
  let g:quickrun_config['watchdogs_checker/_'] = {'outputter/quickfix/open_cmd': ''}
  let g:quickrun_config['watchdogs_checker/jshint'] = {'cmdopt': '--config `/.jshintrc'}
'''
hook_source = '''
    let g:watchdogs_check_CursorHold_enable = 1
    let g:watchdogs_check_CursorHold_enables = {
                \	"python"     : 1,
                \	"ruby"     : 1,
                \}
    let g:quickrun_config={
        \ '*':{
            \ 'hook/time/enable': 1 ,
            \ 'split':'' },
        \ '_':{
            \ 'runner' : 'vimproc',
            \ 'runner/vimproc/updatetime' : 60
                \ },
        \ "watachdog_checker/_" : { 'runner/vimproc/updatetime' : 40 }
        \}
'''
hook_post_source = '''
  call watchdogs#setup(g:quickrun_config)
'''
[[plugins]]
repo =  'tell-k/vim-autopep8'
if = '''executable('autopep8')'''
on_ft = 'python'

[[plugins]]
repo =  'ngmy/vim-rubocop'
if = '''executable('rubocop')'''
on_ft = 'ruby'
